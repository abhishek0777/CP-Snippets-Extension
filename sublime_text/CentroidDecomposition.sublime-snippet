<snippet>
  <content><![CDATA[
struct CentroidDecomposition {

    vector<set<int>> tree; // it's not vector<vector<int>>!
    vector<int> dad;
    vector<int> sub;
   

    CentroidDecomposition(vector<set<int>> &tree) : tree(tree) {
        int n = tree.size();
        dad.resize(n);
        sub.resize(n);
        build(0, -1);
        
        for(int i=0;i<dad.size();i++)
        {
              if(i+1==dad[i]) continue;
              vec2[i+1].pb(dad[i]);
              vec2[dad[i]].pb(i+1);
        }
    }

    void build(int u, int p) {
        int n = dfs(u, p); // find the size of each subtree
        int centroid = dfs(u, p, n); // find the centroid
        if (p == -1) p = centroid; // dad of root is the root itself
        dad[centroid] = p+1;
        vector<int>to;
        for (auto v : tree[centroid])
        to.pb(v);
        
        for(int i=0;i<to.size();i++)
          {
                  tree[centroid].erase(to[i]), // remove the edge to disconnect
            tree[to[i]].erase(centroid), // the component from the tree
            build(to[i], centroid); 
                
          }
    
    }

    int dfs(int u, int p) {
        sub[u] = 1;

        for (auto v : tree[u])
            if (v != p) sub[u] += dfs(v, u);

        return sub[u];
    }

    int dfs(int u, int p, int n) {
        for (auto v : tree[u])
            if (v != p and sub[v] > n/2) return dfs(v, u, n);

        return u;
    }

    int operator[](int i) {
        return dad[i];
    }
};

]]></content>
  <tabTrigger>centroid_decompose</tabTrigger>
  <description>Centroid decomposition</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>